import { Box, Button, Stack, Typography, useMediaQuery } from '@mui/material'
import { useTheme } from '@mui/material/styles'
import { animated, useSpring, useTransition } from '@react-spring/web'
import { delay, remove } from 'lodash'
import { useLocale } from 'next-intl'
import { useEffect, useState } from 'react'

export default function CompressText() {
	const locale = useLocale()
	const [status, setStatus] = useState(1)
	const [direction, setDirection] = useState(0) //0 pre 1 after
	const handlePre = () => {
		setStatus(status - 1)
		setDirection(0)
	}
	const handleAfter = () => {
		setStatus(status + 1)
		setDirection(1)
	}
	const createExplain = (title, content, explain) => {
		return { title, content, explain }
	}

	const explain = {
		zh: [
			createExplain(
				'Method ID',
				'原始交易数据未经压缩',
				'Method ID / 填充的0 / 代币合约地址  / 填充的0 / 收款的账户地址  / 填充的0 /  提币数量'
			),
			createExplain(
				'代币合约地址',
				'用科学计数法把转账数量压缩成64位数据，并删除不必要的0。（数量的精度会略微下降，但实践中影响不大）',
				'Method ID  / 代币合约地址  /  收款的账户地址  / 提币数量'
			),
			createExplain(
				'收款的账户地址',
				'调用的方法如果很常见，可以删除所调用的Method ID，因为如“转账一笔ERC20代币”的交易，可以通过交易内容的特征推测',
				'代币合约地址  /  收款的账户地址  / 提币数量'
			),
			createExplain(
				'填充的0',
				'常用行为设置绿色通道（Helper ID）：大部分发送代币的行为都是如USDC、WETH等常用代币，可以用更短的Helper ID表示如“发送USDC”的信息',
				'Helper ID  /  收款的账户地址  / 提币数量'
			),
			createExplain(
				'收款的账户地址',
				'登记一个“电话簿”，记录收款人地址，将40位的地址压缩为第XXX页的第X个地址。',
				'Helper ID  /  收款账户“电话簿”编号  / 提币数量'
			),
			createExplain(
				'提币数量',
				'如果发送的是ETH，连Helper ID都可以省掉。',
				'收款账户“电话簿”编号  / 提币数量'
			),
		],
		en: [
			createExplain(
				'Method ID',
				'Raw transaction data',
				'Method ID / Zero padding  / Token contract address  / Zero padding  / Recipient account address  / Zero padding  /  Token transfer amount'
			),
			createExplain(
				'Token contract address',
				'Express the transfer amount in scientific notation as 64-bit data, removing unnecessary zeros. Although this might slightly decrease the precision of the amount, the impact is usually negligible in practice.',
				'Method ID  / Token contract address  /  Recipient account address  / Token transfer amount'
			),
			createExplain(
				'Recipient account address',
				'If a commonly used method is being invoked, the Method ID can be left out. For instance, transactions such as "transferring ERC20  token" can be inferred based on the characteristics of the transaction content.',
				'Token contract address  /  Recipient account address  / Token transfer amount'
			),
			createExplain(
				'Zero padding',
				'Create a shorthand (Helper ID) for frequent actions: Most token transfer actions are conducted with well-known tokens like USDC or WETH. A shorter Helper ID can be used to represent the action as "transfer" and the token as "USDC."',
				'Helper ID  /  Recipient account address  / Token transfer amount'
			),
			createExplain(
				'Recipient account address',
				'Maintain a directory of recipient addresses, transforming the 40-character addresses into the Xth address on the XXXth page.',
				'Helper ID  /  Directory reference for the recipient account  / Token transfer amount'
			),
			createExplain(
				'Token transfer amount',
				'If ETH is being transferred, even the Helper ID can be omitted.',
				'Directory reference for the recipient account  / Token transfer amount'
			),
		],
	}

	const defaultStyle = {
		opacity: 1,
		// color: 'white',
		width: '10px',
		delay: 500,
	}
	const todefault = (api, endColor = '#fff') => [
		api.start({ ...defaultStyle, color: endColor }),
	]
	const deleteStyle1 = {
		opacity: 1,
		color: 'yellow',
		width: '10px',
	}
	const deleteStyle2 = {
		opacity: 0,
		color: 'white',
		width: '0px',
	}
	const deleteStyle = deleteStyle2
	const todelete = (api, onRest = () => {}) => {
		api.start({
			...deleteStyle1,
			onRest: () => {
				api.start({ ...deleteStyle2, delay: 500, onRest: onRest })
			},
		})
	}
	const addStyle1 = {
		opacity: 1,
		color: 'green',
		width: '10px',
	}
	const addStyle2 = {
		opacity: 1,
		// color: 'white',
		width: '10px',
	}
	const toadd = (api, endColor = '#fff') => {
		api.start({
			...addStyle1,
			onRest: () => {
				api.start({ ...addStyle2, delay: 500, color: endColor })
			},
		})
	}
	const removeStyle = {
		opacity: 0,
		color: 'white',
		width: '0',
	}

	const toRemove = (api) => {
		api.start(removeStyle)
	}

	const aniStrArr = [
		'4232f461', //default
		'000000000000000000000000', //default
		'7ea2be2df7ba6e54b1a9c70676f668455e329d29', //default
		'000000000000000000000000', //default
		'0000ee', //delete
		'd548a5e31de2b4c2681a58a3be5302abcae4bc57', //default
		'059c01', //delete
		'0000000000000000000000000000000000000000000000000000000000', //default
		'0186a0', //default
	]
	const aniStr = aniStrArr.reduce((pre, cur) => pre + cur)
	// const aniStr = '1122334455';
	const length = aniStr.length //13

	// code below are generated by @/aniCodeGenerator.js
	// animation

	const [s0, a0] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s1, a1] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s2, a2] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s3, a3] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s4, a4] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s5, a5] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s6, a6] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s7, a7] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s8, a8] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s9, a9] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s10, a10] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s11, a11] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s12, a12] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s13, a13] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s14, a14] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s15, a15] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s16, a16] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s17, a17] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s18, a18] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s19, a19] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s20, a20] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s21, a21] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s22, a22] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s23, a23] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s24, a24] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s25, a25] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s26, a26] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s27, a27] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s28, a28] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s29, a29] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s30, a30] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s31, a31] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s32, a32] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s33, a33] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s34, a34] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s35, a35] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s36, a36] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s37, a37] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s38, a38] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s39, a39] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s40, a40] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s41, a41] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s42, a42] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s43, a43] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s44, a44] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s45, a45] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s46, a46] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s47, a47] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s48, a48] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s49, a49] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s50, a50] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s51, a51] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s52, a52] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s53, a53] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s54, a54] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s55, a55] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s56, a56] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s57, a57] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s58, a58] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s59, a59] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s60, a60] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s61, a61] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s62, a62] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s63, a63] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s64, a64] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s65, a65] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s66, a66] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s67, a67] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s68, a68] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s69, a69] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s70, a70] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s71, a71] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s72, a72] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s73, a73] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s74, a74] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s75, a75] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s76, a76] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s77, a77] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s78, a78] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s79, a79] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s80, a80] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s81, a81] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s82, a82] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s83, a83] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s84, a84] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s85, a85] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s86, a86] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s87, a87] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s88, a88] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s89, a89] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s90, a90] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s91, a91] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s92, a92] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s93, a93] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s94, a94] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s95, a95] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s96, a96] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s97, a97] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s98, a98] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s99, a99] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s100, a100] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s101, a101] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s102, a102] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s103, a103] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s104, a104] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s105, a105] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s106, a106] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s107, a107] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s108, a108] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s109, a109] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s110, a110] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s111, a111] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s112, a112] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s113, a113] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s114, a114] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s115, a115] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s116, a116] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s117, a117] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s118, a118] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s119, a119] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s120, a120] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s121, a121] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s122, a122] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s123, a123] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s124, a124] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s125, a125] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s126, a126] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s127, a127] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s128, a128] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s129, a129] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s130, a130] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s131, a131] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s132, a132] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s133, a133] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s134, a134] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s135, a135] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s136, a136] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s137, a137] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s138, a138] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s139, a139] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s140, a140] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s141, a141] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s142, a142] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s143, a143] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s144, a144] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s145, a145] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s146, a146] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s147, a147] = useSpring(
		() => ({
			from: deleteStyle,
		}),
		[]
	)

	const [s148, a148] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s149, a149] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s150, a150] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s151, a151] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s152, a152] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s153, a153] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s154, a154] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s155, a155] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s156, a156] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s157, a157] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s158, a158] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s159, a159] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s160, a160] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s161, a161] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s162, a162] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s163, a163] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s164, a164] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s165, a165] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s166, a166] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s167, a167] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s168, a168] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s169, a169] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s170, a170] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s171, a171] = useSpring(
		() => ({
			from: { ...defaultStyle, color: '#B0B0B0' },
		}),
		[]
	)

	const [s172, a172] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s173, a173] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s174, a174] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s175, a175] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s176, a176] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s177, a177] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s178, a178] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s179, a179] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s180, a180] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s181, a181] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s182, a182] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s183, a183] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s184, a184] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s185, a185] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s186, a186] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s187, a187] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s188, a188] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s189, a189] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s190, a190] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s191, a191] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s192, a192] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s193, a193] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s194, a194] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s195, a195] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s196, a196] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s197, a197] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s198, a198] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s199, a199] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s200, a200] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s201, a201] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s202, a202] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s203, a203] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s204, a204] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s205, a205] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s206, a206] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s207, a207] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s208, a208] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s209, a209] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s210, a210] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const [s211, a211] = useSpring(
		() => ({
			from: defaultStyle,
		}),
		[]
	)

	const ss = [
		s0,
		s1,
		s2,
		s3,
		s4,
		s5,
		s6,
		s7,
		s8,
		s9,
		s10,
		s11,
		s12,
		s13,
		s14,
		s15,
		s16,
		s17,
		s18,
		s19,
		s20,
		s21,
		s22,
		s23,
		s24,
		s25,
		s26,
		s27,
		s28,
		s29,
		s30,
		s31,
		s32,
		s33,
		s34,
		s35,
		s36,
		s37,
		s38,
		s39,
		s40,
		s41,
		s42,
		s43,
		s44,
		s45,
		s46,
		s47,
		s48,
		s49,
		s50,
		s51,
		s52,
		s53,
		s54,
		s55,
		s56,
		s57,
		s58,
		s59,
		s60,
		s61,
		s62,
		s63,
		s64,
		s65,
		s66,
		s67,
		s68,
		s69,
		s70,
		s71,
		s72,
		s73,
		s74,
		s75,
		s76,
		s77,
		s78,
		s79,
		s80,
		s81,
		s82,
		s83,
		s84,
		s85,
		s86,
		s87,
		s88,
		s89,
		s90,
		s91,
		s92,
		s93,
		s94,
		s95,
		s96,
		s97,
		s98,
		s99,
		s100,
		s101,
		s102,
		s103,
		s104,
		s105,
		s106,
		s107,
		s108,
		s109,
		s110,
		s111,
		s112,
		s113,
		s114,
		s115,
		s116,
		s117,
		s118,
		s119,
		s120,
		s121,
		s122,
		s123,
		s124,
		s125,
		s126,
		s127,
		s128,
		s129,
		s130,
		s131,
		s132,
		s133,
		s134,
		s135,
		s136,
		s137,
		s138,
		s139,
		s140,
		s141,
		s142,
		s143,
		s144,
		s145,
		s146,
		s147,
		s148,
		s149,
		s150,
		s151,
		s152,
		s153,
		s154,
		s155,
		s156,
		s157,
		s158,
		s159,
		s160,
		s161,
		s162,
		s163,
		s164,
		s165,
		s166,
		s167,
		s168,
		s169,
		s170,
		s171,
		s172,
		s173,
		s174,
		s175,
		s176,
		s177,
		s178,
		s179,
		s180,
		s181,
		s182,
		s183,
		s184,
		s185,
		s186,
		s187,
		s188,
		s189,
		s190,
		s191,
		s192,
		s193,
		s194,
		s195,
		s196,
		s197,
		s198,
		s199,
		s200,
		s201,
		s202,
		s203,
		s204,
		s205,
		s206,
		s207,
		s208,
		s209,
		s210,
		s211,
	]
	const as = [
		a0,
		a1,
		a2,
		a3,
		a4,
		a5,
		a6,
		a7,
		a8,
		a9,
		a10,
		a11,
		a12,
		a13,
		a14,
		a15,
		a16,
		a17,
		a18,
		a19,
		a20,
		a21,
		a22,
		a23,
		a24,
		a25,
		a26,
		a27,
		a28,
		a29,
		a30,
		a31,
		a32,
		a33,
		a34,
		a35,
		a36,
		a37,
		a38,
		a39,
		a40,
		a41,
		a42,
		a43,
		a44,
		a45,
		a46,
		a47,
		a48,
		a49,
		a50,
		a51,
		a52,
		a53,
		a54,
		a55,
		a56,
		a57,
		a58,
		a59,
		a60,
		a61,
		a62,
		a63,
		a64,
		a65,
		a66,
		a67,
		a68,
		a69,
		a70,
		a71,
		a72,
		a73,
		a74,
		a75,
		a76,
		a77,
		a78,
		a79,
		a80,
		a81,
		a82,
		a83,
		a84,
		a85,
		a86,
		a87,
		a88,
		a89,
		a90,
		a91,
		a92,
		a93,
		a94,
		a95,
		a96,
		a97,
		a98,
		a99,
		a100,
		a101,
		a102,
		a103,
		a104,
		a105,
		a106,
		a107,
		a108,
		a109,
		a110,
		a111,
		a112,
		a113,
		a114,
		a115,
		a116,
		a117,
		a118,
		a119,
		a120,
		a121,
		a122,
		a123,
		a124,
		a125,
		a126,
		a127,
		a128,
		a129,
		a130,
		a131,
		a132,
		a133,
		a134,
		a135,
		a136,
		a137,
		a138,
		a139,
		a140,
		a141,
		a142,
		a143,
		a144,
		a145,
		a146,
		a147,
		a148,
		a149,
		a150,
		a151,
		a152,
		a153,
		a154,
		a155,
		a156,
		a157,
		a158,
		a159,
		a160,
		a161,
		a162,
		a163,
		a164,
		a165,
		a166,
		a167,
		a168,
		a169,
		a170,
		a171,
		a172,
		a173,
		a174,
		a175,
		a176,
		a177,
		a178,
		a179,
		a180,
		a181,
		a182,
		a183,
		a184,
		a185,
		a186,
		a187,
		a188,
		a189,
		a190,
		a191,
		a192,
		a193,
		a194,
		a195,
		a196,
		a197,
		a198,
		a199,
		a200,
		a201,
		a202,
		a203,
		a204,
		a205,
		a206,
		a207,
		a208,
		a209,
		a210,
		a211,
	]
	useEffect(() => {
		if (status === 1) {
			;[0, 1, 2, 3, 4, 5, 6, 7].forEach((v) => {
				todefault(as[v], '#fff')
			})

			;[
				8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
				24, 25, 26, 27, 28, 29, 30, 31,
			].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})

			;[
				32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
				48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
				64, 65, 66, 67, 68, 69, 70, 71,
			].forEach((v) => {
				todefault(as[v], '#fff')
			})

			;[
				72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,
				88, 89, 90, 91, 92, 93, 94, 95,
			].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})
			;[
				102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
				115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
				128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
				141,
			].forEach((v) => {
				todefault(as[v], '#fff')
			})
			;[
				148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
				161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
			].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})

			;[
				172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
				185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
				198, 199, 200, 201, 202, 203, 204, 205,
			].forEach((v) => {
				todefault(as[v], '#fff')
			})
			;[206, 207, 208, 209, 210, 211].forEach((v) => {
				todefault(as[v], '#fff')
			})
		} else if (status === 2) {
			;[0, 1, 2, 3, 4, 5, 6, 7].forEach((v) => {
				todefault(as[v], '#fff')
			})

			direction &&
				[
					8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
					23, 24, 25, 26, 27, 28, 29, 30, 31,
				].forEach((v) => {
					todelete(as[v])
				})

			;[
				32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
				48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
				64, 65, 66, 67, 68, 69, 70, 71,
			].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})

			direction &&
				[
					72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
					87, 88, 89, 90, 91, 92, 93, 94, 95,
				].forEach((v) => {
					todelete(as[v])
				})
			;[
				102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
				115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
				128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
				141,
			].forEach((v) => {
				todefault(as[v], '#fff')
			})
			direction &&
				[
					148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
					160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
					172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
					184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
					196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
				].forEach((v) => {
					todelete(as[v])
				})

			;[206, 207, 208, 209, 210, 211].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})
		} else if (status === 3) {
			direction &&
				[0, 1, 2, 3, 4, 5, 6, 7].forEach((v) => {
					todelete(as[v])
				})
			;[
				32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
				48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
				64, 65, 66, 67, 68, 69, 70, 71,
			].forEach((v) => {
				todefault(as[v], '#fff')
			})
			!direction &&
				[96, 97, 98, 99, 100, 101].forEach((v) => {
					toRemove(as[v])
				})

			;[
				102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
				115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
				128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
				141,
			].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})
			;[206, 207, 208, 209, 210, 211].forEach((v) => {
				todefault(as[v], '#fff')
			})
		} else if (status === 4) {
			direction &&
				[
					32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
					47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
					62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
				].forEach((v) => {
					todelete(as[v], () => {
						direction &&
							[96, 97, 98, 99, 100, 101].forEach((u) => {
								toadd(as[u], '#fff')
							})
					})
				})
			;[
				102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
				115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
				128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
				141,
			].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})

			!direction &&
				[142, 143, 144, 145, 146, 147].forEach((v) => {
					toRemove(as[v])
				})
			;[206, 207, 208, 209, 210, 211].forEach((v) => {
				todefault(as[v], '#fff')
			})
		} else if (status === 5) {
			;[96, 97, 98, 99, 100, 101].forEach((v) => {
				todefault(as[v], '#fff')
			})

			direction &&
				[
					102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
					114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125,
					126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
					138, 139, 140, 141,
				].forEach((v) => {
					todelete(as[v], () => {
						direction &&
							[142, 143, 144, 145, 146, 147].forEach((u) => {
								toadd(as[u], '#B0B0B0')
							})
					})
				})

			!direction &&
				[142, 143, 144, 145, 146, 147].forEach((v) => {
					todefault(as[v], '#B0B0B0')
				})
			;[206, 207, 208, 209, 210, 211].forEach((v) => {
				todefault(as[v], '#fff')
			})
		} else if (status === 6) {
			direction &&
				[96, 97, 98, 99, 100, 101].forEach((v) => {
					todelete(as[v])
				})
			;[142, 143, 144, 145, 146, 147].forEach((v) => {
				todefault(as[v])
			})
			;[206, 207, 208, 209, 210, 211].forEach((v) => {
				todefault(as[v], '#B0B0B0')
			})
		}
	}, [status])

	//animation

	// const transitions = useTransition(explain[status], {
	//   from: { opacity: 0, transform: 'translate3d(0,-40px,0)' },
	//   enter: { opacity: 1, transform: 'translate3d(0,0px,0)' },
	//   leave: { opacity: 0, transform: 'translate3d(0,40px,0)' },
	//   exitBeforeEnter: true,
	// });

	const theme = useTheme()

	const mdScreen = useMediaQuery(theme.breakpoints.up('md'))

	return (
		<Box justifyContent="center" display="flex" marginTop={'50px'}>
			<Stack
				sx={{
					padding: { xs: '20px 10px', md: '20px 65px' },
					background: '#F6F6F6',
					borderRadius: '18px',
					textAlign: 'center',
					width: { xs: '260px', sm: '400px', md: '530px' },
					alignItems: 'center',
				}}
			>
				<Typography variant="h4" fontWeight={700} mb="10px">
					{locale === 'zh' ? '数据压缩动画' : 'Data compression'}
				</Typography>
				<Stack
					sx={{
						// width: mdScreen ? '400px' : '270px',
						width: { xs: '270px', sm: '330px', md: '400px' },
						// width: '400px',
						height: mdScreen ? '300px' : '350px',
						left: '0px',
						top: '0px',
						px: mdScreen ? '48px' : '12px',
						pt: mdScreen ? '30px' : '15px',
						pb: mdScreen ? '20px' : '0px',
						background: '#010101',
						borderRadius: '10px',
						fontFamily: 'Roboto Mono',
						fontSize: '15px',
						color: 'white',
						justifyContent: 'space-between',
					}}
				>
					<Box
						// width="400px"
						sx={{
							display: 'flex',
							flexWrap: 'wrap',
							letterSpacing: '-1px',
							justifyContent:
								status == 5 || status == 6 ? 'center' : 'start',
						}}
					>
						{aniStr.split('').map((v, index) => (
							<animated.div
								style={{
									display: 'inline-block',
									...ss[index],
								}}
								key={index}
							>
								{v}
							</animated.div>
						))}
					</Box>
					<Stack direction="row" justifyContent="space-between">
						<Button
							onClick={handlePre}
							sx={{
								fontFamily: 'Nanum Brush Script',
								fontSize: '24px',
								color: 'white',
								textTransform: 'capitalize',
								// hid: status === 1 ? 'none' : 'block',
								visibility: status === 1 ? 'hidden' : 'visible',
							}}
							startIcon={
								<Box
									component={'img'}
									src="/arrow.svg"
									sx={{ rotate: '180deg' }}
									width={'30px'}
								/>
							}
						>
							pre
						</Button>
						{/* {status} */}
						<Button
							onClick={handleAfter}
							sx={{
								fontFamily: 'Nanum Brush Script',
								fontSize: '24px',
								color: 'white',
								textTransform: 'capitalize',
								visibility: status === 6 ? 'hidden' : 'visible',
							}}
							endIcon={
								<Box
									component={'img'}
									src="/arrow.svg"
									width={'30px'}
								/>
							}
						>
							after
						</Button>
					</Stack>
				</Stack>
				<Typography variant="h5" fontWeight={700} mt="40px">
					{status == 1
						? locale === 'zh'
							? '原始状态'
							: 'Original state'
						: (locale === 'zh' ? '压缩状态' : 'Compressed state') +
						  (status - 1)}
				</Typography>
				<Typography variant="body2" mt="20px">
					{explain[locale][status - 1].explain}
				</Typography>
				<Typography variant="body2" mt="10px">
					{(status != 1 ? status - 1 + '. ' : '') +
						explain[locale][status - 1].content}
				</Typography>
			</Stack>
		</Box>
	)
}
